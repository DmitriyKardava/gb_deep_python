"""
–¢—Ä–∏ –¥—Ä—É–≥–∞ –≤–∑—è–ª–∏ –≤–µ—â–∏ –≤ –ø–æ—Ö–æ–¥. –°—Ñ–æ—Ä–º–∏—Ä—É–π—Ç–µ —Å–ª–æ–≤–∞—Ä—å, –≥–¥–µ
–∫–ª—é—á - –∏–º—è –¥—Ä—É–≥–∞, –∞ –∑–Ω–∞—á–µ–Ω–∏–µ - –∫–æ—Ä—Ç–µ–∂ –≤–µ—â–µ–π. –û—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞
–≤–æ–ø—Ä–æ—Å—ã:
üìå –∫–∞–∫–∏–µ –≤–µ—â–∏ –≤–∑—è–ª–∏ –≤—Å–µ —Ç—Ä–∏ –¥—Ä—É–≥–∞
üìå –∫–∞–∫–∏–µ –≤–µ—â–∏ —É–Ω–∏–∫–∞–ª—å–Ω—ã, –µ—Å—Ç—å —Ç–æ–ª—å–∫–æ —É –æ–¥–Ω–æ–≥–æ –¥—Ä—É–≥–∞
üìå –∫–∞–∫–∏–µ –≤–µ—â–∏ –µ—Å—Ç—å —É –≤—Å–µ—Ö –¥—Ä—É–∑–µ–π –∫—Ä–æ–º–µ –æ–¥–Ω–æ–≥–æ –∏ –∏–º—è —Ç–æ–≥–æ, —É
–∫–æ–≥–æ –¥–∞–Ω–Ω–∞—è –≤–µ—â—å –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç
üìå –î–ª—è —Ä–µ—à–µ–Ω–∏—è –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ —Å –º–Ω–æ–∂–µ—Å—Ç–≤–∞–º–∏. –ö–æ–¥
–¥–æ–ª–∂–µ–Ω —Ä–∞—Å—à–∏—Ä—è—Ç—å—Å—è –Ω–∞ –ª—é–±–æ–µ –±–æ–ª—å—à–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥—Ä—É–∑–µ–π.
"""

hike = {"–ü–µ—Ç—Ä": ("—Ä—é–∫–∑–∞–∫", "—Ç–æ–ø–æ—Ä", "—Å–ø–∏—á–∫–∏", "—Å–∞–ø–æ–≥–∏", ),
        "–î–º–∏—Ç—Ä–∏–π": ("—Ä—é–∫–∑–∞–∫", "—Å–ø–∏—á–∫–∏", "—Å–∞–ø–æ–≥–∏", ),
        "–ò–≤–∞–Ω": ("–ø–∞–ª–∞—Ç–∫–∞", "—Ä—é–∫–∑–∞–∫", "—Å–ø–∏—á–∫–∏", ),
        "–§–µ–¥–æ—Ä": ("—Ä—é–∫–∑–∞–∫", "—Å–ø–∏—á–∫–∏", "—Å–∞–ø–æ–≥–∏", ),
        "–ú–∞—Ä–∫": ("—Å–ø–∏—á–∫–∏", "—Ä—é–∫–∑–∞–∫", "—Ç–æ–ø–æ—Ä", "—Å–∞–ø–æ–≥–∏", ),
        }
hike = {k: set(v) for k, v in hike.items()}

print(f"–í–∑—è–ª–∏ –≤—Å–µ: {set.intersection(*hike.values())}")
union = set.union(*hike.values())

hike_count = {}
for items in hike.values():
    for item in items:
        hike_count[item] = hike_count.get(item, 0) + 1

print("–ï—Å—Ç—å —Ç–æ–ª—å–∫–æ —É –æ–¥–Ω–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞:")
for key, val in hike_count.items():
    if val == 1:
        print(key)

print("–í–∑—è–ª–∏ –≤—Å–µ, –∫—Ä–æ–º–µ:")
for key, val in hike_count.items():
    if val == len(hike) - 1:
        for name, things in hike.items():
            if key not in things:
                print(key, name)
